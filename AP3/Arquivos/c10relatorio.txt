Estruturas de Dados
Aula Prática 3
c10



Nome: Letícia Scofield Lenzoni
Matrícula: 2022035547



1.  O loop é infinito, deve-se colocar uma função de parada.


2. GDB:
Starting program: /home/lets/ED_Atividades/AP3/CodigosReparados/c10.exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
(forcei a parada)
Program received signal SIGINT, Interrupt.
0x00007ffff7e32930 in _int_malloc (av=av@entry=0x7ffff7fa7c80 <main_arena>, bytes=bytes@entry=128) at ./malloc/malloc.c:4382
4382    ./malloc/malloc.c: No such file or directory.

Valgrind:
==36482== Memcheck, a memory error detector
==36482== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==36482== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==36482== Command: ./c10.exe
==36482== 
(forcei a parada)
==36482== Process terminating with default action of signal 2 (SIGINT)
==36482==    at 0x4905120: malloc (malloc.c:3287)
==36482==    by 0x10915E: main (c10.c:9)
==36482== 
==36482== HEAP SUMMARY:
==36482==     in use at exit: 361,215,104 bytes in 2,821,993 blocks
==36482==   total heap usage: 2,821,993 allocs, 0 frees, 361,215,104 bytes allocated
==36482== 
==36482== LEAK SUMMARY:
==36482==    definitely lost: 361,214,208 bytes in 2,821,986 blocks
==36482==    indirectly lost: 0 bytes in 0 blocks
==36482==      possibly lost: 768 bytes in 6 blocks
==36482==    still reachable: 128 bytes in 1 blocks
==36482==         suppressed: 0 bytes in 0 blocks
==36482== Rerun with --leak-check=full to see details of leaked memory
==36482== 
==36482== For lists of detected and suppressed errors, rerun with: -s
==36482== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


3. Coloquei um while que ocorre 128 vezes, além disso desaloquei o p dentro do while, antes que ele seja alocado novamente.


4. GDB:
Starting program: /home/lets/ED_Atividades/AP3/CodigosReparados/c10.exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
(...)
[Inferior 1 (process 37257) exited normally]

Valgrind:
==37052== Memcheck, a memory error detector
==37052== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==37052== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==37052== Command: ./c10.exe
==37052== 
==37052== Conditional jump or move depends on uninitialised value(s)
==37052==    at 0x484B235: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==37052==    by 0x1091A9: main (c10.c:10)
==37052== 
(...)
==37052== 
==37052== HEAP SUMMARY:
==37052==     in use at exit: 128 bytes in 1 blocks
==37052==   total heap usage: 128 allocs, 127 frees, 17,280 bytes allocated
==37052== 
==37052== LEAK SUMMARY:
==37052==    definitely lost: 128 bytes in 1 blocks
==37052==    indirectly lost: 0 bytes in 0 blocks
==37052==      possibly lost: 0 bytes in 0 blocks
==37052==    still reachable: 0 bytes in 0 blocks
==37052==         suppressed: 0 bytes in 0 blocks
==37052== Rerun with --leak-check=full to see details of leaked memory
==37052== 
==37052== Use --track-origins=yes to see where uninitialised values come from
==37052== For lists of detected and suppressed errors, rerun with: -s
==37052== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)